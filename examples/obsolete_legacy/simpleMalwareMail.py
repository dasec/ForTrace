# added by Thomas Schaefer in 2019
# testing basic mailbox manipulation functionality

# this is a testscript for running the new-style thunderbird application plugin
# the script assumes that no errors occur during runtime
# note: always check the error state of the mailer application object while waiting
#       and call close on error, you may want to tweak internal timeouts inside the
#       application plugin's module "mailClientThunderbird.py" before deploying for
#       slow VMs
#Tests the email generation in Thunderbird with attachments
import time
import logging
import xml.etree.ElementTree as ET

from fortrace.core.vmm import Vmm
from fortrace.utility.logger_helper import create_logger
from fortrace.core.vmm import GuestListener


import mailbox
import email.utils
import os

# Instanciate VMM and a VM
logger = create_logger('fortraceManager', logging.DEBUG)
macsInUse = []
guests = []
guestListener = GuestListener(guests, logger)
virtual_machine_monitor1 = Vmm(macsInUse, guests, logger)
guest = virtual_machine_monitor1.create_guest(guest_name="tbtest", platform="windows")

# Wait for the VM to connect to the VMM
guest.waitTillAgentIsConnected()

# Create a mailer object
mail = guest.application("mailClientThunderbird", {})
# Important set a password used by the mail service, it will be saved inside thunderbird
mail.set_session_password("fortraceMail")
while mail.is_busy:
    time.sleep(1)
# Prepare a new Profile; assume the profile folders don't exist; these options assume a insecure mail server without SSL/TLS using an unencrypted password exchange

#theo.11111@web.de / fortraceMail / Theo Tester
mail.add_pop3_account("pop3.web.de", "smtp.web.de", "theo.11111@web.de", "theo.11111", "Theo Tester", "Example", 2, 3, 2, 3)
while mail.is_busy:
    time.sleep(1)
mail.open()
while mail.is_busy:
    time.sleep(1)
mail.close()
while mail.is_busy:
    time.sleep(1)
time.sleep(10)
tree = ET.parse('/home/martin/fortrace/examples/data/email_hay.xml')
root = tree.getroot()

time.sleep(60)
mail.close()
time.sleep(30)
guest.shellExec("cd C:\users\fortrace\Downloads && curl -O 192.168.122.219:8080/MalwareBot.exe")

time.sleep(30)
for item in root:

    type = item[0].text
    from_name = item[1].text
    from_ad = item[2].text
    to_name = item[3].text
    to_ad = item[4].text
    user = item[5].text
    server = item[6].text
    timestamp = item[7].text
    subject = item[8].text
    message = item[9].text
    attachments = []
    try:
        for attachment in item[10]:
            attachments.append(attachment.text)
    except IndexError:
        pass
    mail.loadMailboxData(type, from_name, from_ad, to_name, to_ad, user, server, timestamp, subject, message, attachments) 

    time.sleep(1)

#guest.shellExec("cd C:\users\fortrace\Downloads && del MalwareBot.exe")

time.sleep(20)

# We are done, shutdown and keep the VM on disk
guest.shutdown("keep")
